"use strict";

var getAngle = require('../../inc/calc').angle;

var calcRotation = function (path, point, distance) {
    var testPoint = this.path.getPointAtLength(distance + 0.2);

    return getAngle(point, testPoint);
};

var SVGMovePathRole = {
    init: function () {
        this.pathLength = this.path.getTotalLength();
    },

    update: function (state) {
        var distance = state.progress * this.pathLength,
            newPoint = this.path.getPointAtLength(distance),
            rotation = this.autoRotate ? calcRotation(this.path, newPoint, distance) : state.rotation || 0;

        this.element.setAttribute('transform', 'translate(' + newPoint.x + ', ' + newPoint.y + ') rotate(' + rotation + ')');
    }
};

module.exports = SVGMovePathRole;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb2xlcy9wYXRoL21vdmVQYXRoUm9sZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7O0FBRWIsSUFBSSxRQUFRLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUMsS0FBSyxDQUFDOztBQUUvQyxJQUFJLFlBQVksR0FBRyxVQUFVLElBQUksRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFO0FBQ2hELFFBQUksU0FBUyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQyxDQUFDOztBQUUzRCxXQUFPLFFBQVEsQ0FBQyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7Q0FDckMsQ0FBQzs7QUFFRixJQUFJLGVBQWUsR0FBRztBQUNsQixRQUFJLEVBQUUsWUFBWTtBQUNkLFlBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztLQUNoRDs7QUFFRCxVQUFNLEVBQUUsVUFBVSxLQUFLLEVBQUU7QUFDckIsWUFBSSxRQUFRLEdBQUcsS0FBSyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsVUFBVTtZQUMzQyxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUM7WUFDL0MsUUFBUSxHQUFHLElBQUksQ0FBQyxVQUFVLEdBQUcsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLFFBQVEsQ0FBQyxHQUFHLEtBQUssQ0FBQyxRQUFRLElBQUksQ0FBQyxDQUFDOztBQUVuRyxZQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsWUFBWSxHQUFHLFFBQVEsQ0FBQyxDQUFDLEdBQUcsSUFBSSxHQUFHLFFBQVEsQ0FBQyxDQUFDLEdBQUcsV0FBVyxHQUFHLFFBQVEsR0FBRyxHQUFHLENBQUMsQ0FBQztLQUN4SDtDQUNKLENBQUM7O0FBRUYsTUFBTSxDQUFDLE9BQU8sR0FBRyxlQUFlLENBQUMiLCJmaWxlIjoibW92ZVBhdGhSb2xlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBnZXRBbmdsZSA9IHJlcXVpcmUoJy4uLy4uL2luYy9jYWxjJykuYW5nbGU7XG5cbnZhciBjYWxjUm90YXRpb24gPSBmdW5jdGlvbiAocGF0aCwgcG9pbnQsIGRpc3RhbmNlKSB7XG4gICAgdmFyIHRlc3RQb2ludCA9IHRoaXMucGF0aC5nZXRQb2ludEF0TGVuZ3RoKGRpc3RhbmNlICsgMC4yKTtcblxuICAgIHJldHVybiBnZXRBbmdsZShwb2ludCwgdGVzdFBvaW50KTtcbn07XG5cbnZhciBTVkdNb3ZlUGF0aFJvbGUgPSB7XG4gICAgaW5pdDogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnBhdGhMZW5ndGggPSB0aGlzLnBhdGguZ2V0VG90YWxMZW5ndGgoKTtcbiAgICB9LFxuXG4gICAgdXBkYXRlOiBmdW5jdGlvbiAoc3RhdGUpIHtcbiAgICAgICAgdmFyIGRpc3RhbmNlID0gc3RhdGUucHJvZ3Jlc3MgKiB0aGlzLnBhdGhMZW5ndGgsXG4gICAgICAgICAgICBuZXdQb2ludCA9IHRoaXMucGF0aC5nZXRQb2ludEF0TGVuZ3RoKGRpc3RhbmNlKSxcbiAgICAgICAgICAgIHJvdGF0aW9uID0gdGhpcy5hdXRvUm90YXRlID8gY2FsY1JvdGF0aW9uKHRoaXMucGF0aCwgbmV3UG9pbnQsIGRpc3RhbmNlKSA6IHN0YXRlLnJvdGF0aW9uIHx8IDA7XG5cbiAgICAgICAgdGhpcy5lbGVtZW50LnNldEF0dHJpYnV0ZSgndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgnICsgbmV3UG9pbnQueCArICcsICcgKyBuZXdQb2ludC55ICsgJykgcm90YXRlKCcgKyByb3RhdGlvbiArICcpJyk7XG4gICAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBTVkdNb3ZlUGF0aFJvbGU7Il19